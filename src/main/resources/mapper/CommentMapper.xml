<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybaits.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.sisyphusj.community.app.comment.mapper.CommentMapper">

    <insert id="insertComment" parameterType="me.sisyphusj.community.app.comment.domain.CommentVO" useGeneratedKeys="true" keyProperty="commentId">
        insert into comments (parent_id, user_id, post_id, content)
        values (#{parentId}, #{userId}, #{postId}, #{content})
    </insert>

    <select id="selectCountComment" parameterType="long" resultType="int">
        select count(*)
        from comments
        where post_id = #{postId}
          and is_deleted = 'N'
    </select>

    <select id="selectCommentList" parameterType="long" resultType="me.sisyphusj.community.app.comment.domain.CommentVO">
        select comment_id,
               parent_id,
               u.user_id,
               c.post_id,
               u.name,
               content,
               created_at,
               updated_at
        from comments c
                 inner join user u on c.user_id = u.user_id
        where is_deleted = 'N'
          and post_id = #{postId}
        order by created_at desc
    </select>

    <select id="selectCommentListOrderByAsc" parameterType="long" resultType="me.sisyphusj.community.app.comment.domain.CommentVO">
        select comment_id,
               parent_id,
               u.user_id,
               c.post_id,
               u.name,
               content,
               created_at,
               updated_at
        from comments c
                 inner join user u on c.user_id = u.user_id
        where is_deleted = 'N'
          and post_id = #{postId}
    </select>

    <select id="selectComment" parameterType="long" resultType="me.sisyphusj.community.app.comment.domain.CommentVO">
        select comment_id,
               parent_id,
               u.user_id,
               c.post_id,
               u.name,
               content,
               created_at,
               updated_at
        from comments c
                 inner join user u on c.user_id = u.user_id
        where is_deleted = 'N'
          and u.user_id = #{userId}
          and comment_id = #{commentId}
    </select>

    <update id="editComment" parameterType="me.sisyphusj.community.app.comment.domain.CommentVO">
        update comments
        set content = #{content}
        where is_deleted = 'N'
          and user_id = #{userId}
          and comment_id = #{commentId}
    </update>

    <update id="deleteComment">
        update comments
        set is_deleted = 'Y'
        where comment_id in
        <foreach item="commentId" collection="deleteCommentIdList" open="(" separator="," close=")">
            #{commentId}
        </foreach>
    </update>

</mapper>